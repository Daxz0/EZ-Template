"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8566],{5637:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=o(5893),r=o(1151);const s={title:"Using Autonomous Selector",description:"How to have multiple autonomous routines in one program"},i=void 0,a={id:"tutorials/using_auton_selector",title:"Using Autonomous Selector",description:"How to have multiple autonomous routines in one program",source:"@site/ez-template-docs/tutorials/using_auton_selector.md",sourceDirName:"tutorials",slug:"/tutorials/using_auton_selector",permalink:"/EZ-Template/tutorials/using_auton_selector",draft:!1,unlisted:!1,editUrl:"https://github.com/EZ-Robotics/EZ-Template/tree/website/ez-template-docs/tutorials/using_auton_selector.md",tags:[],version:"current",frontMatter:{title:"Using Autonomous Selector",description:"How to have multiple autonomous routines in one program"},sidebar:"docs",previous:{title:"Installation and Upgrading",permalink:"/EZ-Template/tutorials/installation"},next:{title:"Adding Autonomous Routines",permalink:"/EZ-Template/tutorials/autons"}},u={},l=[{value:"Select and Run your Autonomous",id:"select-and-run-your-autonomous",level:2},{value:"Using an SD Card",id:"using-an-sd-card",level:2},{value:"Testing Autonomous in Opcontrol",id:"testing-autonomous-in-opcontrol",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"select-and-run-your-autonomous",children:"Select and Run your Autonomous"}),"\n",(0,n.jsxs)(t.p,{children:["With a competition switch, run your code in disable.  Select the autonomous on the screen by pressing the left / right buttons until you're on the page you want.  Select ",(0,n.jsx)(t.code,{children:"Autonomous"})," on your competition switch, and set it to ",(0,n.jsx)(t.code,{children:"Enable"})," to run the autonomous."]}),"\n",(0,n.jsx)(t.h2,{id:"using-an-sd-card",children:"Using an SD Card"}),"\n",(0,n.jsx)(t.p,{children:"The SD card will remember the last page you were on before powering the robot off.  If you're on page 3 and power off, the next time you power on the selector will start on page 3."}),"\n",(0,n.jsx)(t.p,{children:"To use an SD card with the brain, just plug it in!"}),"\n",(0,n.jsx)(t.h2,{id:"testing-autonomous-in-opcontrol",children:"Testing Autonomous in Opcontrol"}),"\n",(0,n.jsx)(t.p,{children:"During opcontrol you can call your autonomous.  In the example below, when the robot isn't connected to a competition switch and B is pressed on the controller, the autonomous will run.  To select your autonomous, use the left / right buttons on the brain screen until you're on the page you want, then run the autonomous."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"void opcontrol() {\r\n  // This is preference to what you like to drive on\r\n  chassis.drive_brake_set(MOTOR_BRAKE_COAST);\r\n  \r\n  while (true) {\r\n    \r\n    // PID Tuner\r\n    // After you find values that you're happy with, you'll have to set them in auton.cpp\r\n    if (!pros::competition::is_connected()) { \r\n      // Enable / Disable PID Tuner\r\n      if (master.get_digital_new_press(DIGITAL_X)) \r\n        chassis.pid_tuner_toggle();\r\n        \r\n      // Trigger the selected autonomous routine\r\n      if (master.get_digital_new_press(DIGITAL_B)) \r\n        autonomous();\r\n\r\n      chassis.pid_tuner_iterate(); // Allow PID Tuner to iterate\r\n    } \r\n\r\n    chassis.opcontrol_tank(); // Tank control\r\n    // chassis.opcontrol_arcade_standard(ez::SPLIT); // Standard split arcade\r\n    // chassis.opcontrol_arcade_standard(ez::SINGLE); // Standard single arcade\r\n    // chassis.opcontrol_arcade_flipped(ez::SPLIT); // Flipped split arcade\r\n    // chassis.opcontrol_arcade_flipped(ez::SINGLE); // Flipped single arcade\r\n\r\n    // . . .\r\n    // Put more user control code here!\r\n    // . . .\r\n\r\n    pros::delay(ez::util::DELAY_TIME); // This is used for timer calculations!  Keep this ez::util::DELAY_TIME\r\n  }\r\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>i});var n=o(7294);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);