"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[42],{588:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var n=r(5893),t=r(1151),i=r(4866),a=r(5162);const l={layout:"default",title:"Autonomous Functions",parent:"Docs",description:"",nav_order:4},o="Autonomous Functions",d={id:"docs/auton_functions",title:"Autonomous Functions",description:"",source:"@site/ez-template-docs/docs/auton_functions.md",sourceDirName:"docs",slug:"/docs/auton_functions",permalink:"/EZ-Template/docs/auton_functions",draft:!1,unlisted:!1,editUrl:"https://github.com/EZ-Robotics/EZ-Template/tree/website/ez-template-docs/docs/auton_functions.md",tags:[],version:"current",frontMatter:{layout:"default",title:"Autonomous Functions",parent:"Docs",description:"",nav_order:4},sidebar:"tutorialSidebar",previous:{title:"Docs",permalink:"/EZ-Template/category/docs"},next:{title:"Autonomous Selector",permalink:"/EZ-Template/docs/auton_selector"}},c={},u=[{value:"Assumed Constructor",id:"assumed-constructor",level:2},{value:"Setter functions",id:"setter-functions",level:2},{value:"set_drive_pid()",id:"set_drive_pid",level:3},{value:"set_turn_pid()",id:"set_turn_pid",level:3},{value:"set_swing_pid()",id:"set_swing_pid",level:3},{value:"reset_pid_targets()",id:"reset_pid_targets",level:3},{value:"set_angle()",id:"set_angle",level:3},{value:"set_max_speed()",id:"set_max_speed",level:3},{value:"set_pid_constants()",id:"set_pid_constants",level:3},{value:"set_slew_min_power()",id:"set_slew_min_power",level:3},{value:"set_slew_distance()",id:"set_slew_distance",level:3},{value:"set_exit_condition()",id:"set_exit_condition",level:3},{value:"set_swing_min()",id:"set_swing_min",level:3},{value:"set_turn_min()",id:"set_turn_min",level:3},{value:"set_mode()",id:"set_mode",level:3},{value:"toggle_auto_drive()",id:"toggle_auto_drive",level:3},{value:"toggle_auto_print()",id:"toggle_auto_print",level:3},{value:"Getter",id:"getter",level:2},{value:"get_swing_min()",id:"get_swing_min",level:3},{value:"get_turn_min()",id:"get_turn_min",level:3},{value:"interfered",id:"interfered",level:3},{value:"get_mode()",id:"get_mode",level:3},{value:"get_tick_per_inch()",id:"get_tick_per_inch",level:3},{value:"Misc.",id:"misc",level:2},{value:"wait_drive()",id:"wait_drive",level:3},{value:"wait_until()",id:"wait_until",level:3}];function h(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"autonomous-functions",children:(0,n.jsx)(s.strong,{children:"Autonomous Functions"})}),"\n",(0,n.jsx)(s.h2,{id:"assumed-constructor",children:"Assumed Constructor"}),"\n",(0,n.jsxs)(s.p,{children:["All code below assumes this constructor is used.  As long as the name of the constructor is ",(0,n.jsx)(s.code,{children:"chassis"}),", any of the constructors can be used."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:'// Chassis constructor\r\nDrive chassis (\r\n  // Left Chassis Ports (negative port will reverse it!)\r\n  //   the first port is the sensored port (when trackers are not used!)\r\n  {1, -2, 3}\r\n\r\n  // Right Chassis Ports (negative port will reverse it!)\r\n  //   the first port is the sensored port (when trackers are not used!)\r\n  ,{-4, 5, -6}\r\n\r\n  // IMU Port\r\n  ,7\r\n\r\n  // Wheel Diameter (Remember, 4" wheels are actually 4.125!)\r\n  //    (or tracking wheel diameter)\r\n  ,4.125\r\n\r\n  // Cartridge RPM\r\n  //   (or tick per rotation if using tracking wheels)\r\n  ,600\r\n\r\n  // External Gear Ratio (MUST BE DECIMAL)\r\n  //    (or gear ratio of tracking wheel)\r\n  // eg. if your drive is 84:36 where the 36t is powered, your RATIO would be 2.333.\r\n  // eg. if your drive is 36:60 where the 60t is powered, your RATIO would be 0.6.\r\n  ,2.333\r\n\r\n  // Uncomment if using tracking wheels\r\n  /*\r\n  // Left Tracking Wheel Ports (negative port will reverse it!)\r\n  ,{1, 2}\r\n\r\n  // Right Tracking Wheel Ports (negative port will reverse it!)\r\n  ,{3, 4}\r\n  */\r\n\r\n  // Uncomment if tracking wheels are plugged into a 3 wire expander\r\n  // 3 Wire Port Expander Smart Port\r\n  // ,9\r\n);\r\n\n'})}),"\n",(0,n.jsx)(s.h2,{id:"setter-functions",children:"Setter functions"}),"\n",(0,n.jsx)(s.h3,{id:"set_drive_pid",children:"set_drive_pid()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the drive to go forward using PID and heading correction.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"target"})," is in inches.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"speed"})," is -127 to 127.  It's recommended to keep this at 110.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"slew_on"})," will ramp the drive up.\r\n",(0,n.jsx)(s.code,{children:"toggle_heading"})," will disable heading correction when false."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples1",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_drive_pid(24, 110, true);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_drive_pid(double target, int speed, bool slew_on = false, bool toggle_heading = true);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_turn_pid",children:"set_turn_pid()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the drive to turn using PID.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"target"})," is in degrees.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"speed"})," is -127 to 127."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples2",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_drive_pid(24, 110, true);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_turn_pid(double target, int speed);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_swing_pid",children:"set_swing_pid()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the robot to swing using PID.  The robot will turn using one side of the drive, either the left or right.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"type"})," is either ",(0,n.jsx)(s.code,{children:"ez::LEFT_SWING"})," or ",(0,n.jsx)(s.code,{children:"ez::RIGHT_SWING"}),".",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"target"})," is in degrees.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"speed"})," is -127 to 127."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples3",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_swing_pid(e_swing type, double target, int speed);\n"})})}),(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_swing_pid(ez::LEFT_SWING, 45, 110);\r\n  chassis.wait_drive();\r\n\r\n  chassis.set_swing_pid(ez::RIGHT_SWING, 0, 110);\r\n  chassis.wait_drive();\r\n}\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"reset_pid_targets",children:"reset_pid_targets()"}),"\n",(0,n.jsx)(s.p,{children:"Resets all drive PID targets to 0."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples4",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_pid_targets(); // Resets PID targets to 0\r\n  chassis.reset_gyro(); // Reset gyro position to 0\r\n  chassis.reset_drive_sensor(); // Reset drive sensors to 0\r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); // Set motors to hold.  This helps autonomous consistency.\r\n\r\n  ez::as::auton_selector.call_selected_auton(); // Calls selected auton from autonomous selector.\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void reset_pid_targets();\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_angle",children:"set_angle()"}),"\n",(0,n.jsx)(s.p,{children:"Sets the angle of the robot.  This is useful when your robot is setup in at an unconventional angle and you want 0 to be when you're square with the field."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples5",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_angle(double angle);\n"})})}),(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_pid_targets(); // Resets PID targets to 0\r\n  chassis.reset_gyro(); // Reset gyro position to 0\r\n  chassis.reset_drive_sensor(); // Reset drive sensors to 0\r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); // Set motors to hold.  This helps autonomous consistency.\r\n\r\n  chassis.set_angle(45);\r\n\r\n  chassis.set_turn_pid(0, TURN_SPEED);\r\n  chassis.wait_drive();\r\n}\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_max_speed",children:"set_max_speed()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the max speed of the drive.\r\n",(0,n.jsx)(s.code,{children:"speed"})," an integer between -127 and 127."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples6",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_drive_pid(48, 110);\r\n  chassis.wait_until(24);\r\n  chassis.set_max_speed(40);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_max_speed(int speed);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_pid_constants",children:"set_pid_constants()"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Note: this function was changed with 2.0.1"}),(0,n.jsx)(s.br,{}),"\n","Set PID constants.  Below are the defaults.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"pid"})," either ",(0,n.jsx)(s.code,{children:"&chassis.headingPID"}),", ",(0,n.jsx)(s.code,{children:"&chassis.forward_drivePID"}),", ",(0,n.jsx)(s.code,{children:"&chassis.backward_drivePID"}),", ",(0,n.jsx)(s.code,{children:"&chassis.turnPID"}),", or ",(0,n.jsx)(s.code,{children:"&chassis.swingPID"}),".",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p"})," proportion constant.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"i"})," integral constant.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"d"})," derivative constant.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_start_i"})," error needs to be within this for i to start."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples7",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void initialize() {\r\n  chassis.set_pid_constants(&chassis.headingPID, 11, 0, 20, 0);\r\n  chassis.set_pid_constants(&chassis.forward_drivePID, 0.45, 0, 5, 0);\r\n  chassis.set_pid_constants(&chassis.backward_drivePID, 0.45, 0, 5, 0);\r\n  chassis.set_pid_constants(&chassis.turnPID, 5, 0.003, 35, 15;\r\n  chassis.set_pid_constants(&chassis.swingPID, 7, 0, 45, 0);\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_pid_constants(PID* pid, double p, double i, double d, double p_start_i);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_slew_min_power",children:"set_slew_min_power()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the starting speed for slew, with the ability to have different constants for forward and reverse.  Below is the defaults.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"fwd"})," integer between -127 and 127.\r\n",(0,n.jsx)(s.code,{children:"rev"})," integer between -127 and 127."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples8",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void initialize() {\r\n  chassis.set_slew_min_power(80, 80);\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_slew_min_power(int fwd, int rev);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_slew_distance",children:"set_slew_distance()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the distance the drive will slew for, with the ability to have different constants for forward and reverse.  Input is inches.  Below is the defaults.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"fwd"})," a distance in inches.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"rev"})," a distance in inches."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples9",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void initialize() {\r\n  chassis.set_slew_min_distance(7, 7);\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_slew_distance (int fwd, int rev);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_exit_condition",children:"set_exit_condition()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the exit condition constants. This uses the exit conditions from the PID class.  Below is the defaults.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"type"})," either ",(0,n.jsx)(s.code,{children:"chassis.turn_exit"}),", ",(0,n.jsx)(s.code,{children:"chassis.swing_exit"}),", or ",(0,n.jsx)(s.code,{children:"chassis.drive_exit"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_small_exit_time"})," time, in ms, before exiting ",(0,n.jsx)(s.code,{children:"p_small_error"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_small_error"})," small error threshold",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_big_exit_time"})," time, in ms, before exiting ",(0,n.jsx)(s.code,{children:"p_big_error"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_big_error"})," big error threshold",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_velocity_exit_time"})," time, in ms, for velocity to be 0",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"p_mA_timeout"})," time, in ms, for ",(0,n.jsx)(s.code,{children:"is_over_current"})," to be true"]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples10",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void initialize() {\r\n  chassis.set_exit_condition(chassis.turn_exit,  100, 3,  500, 7,   500, 500);\r\n  chassis.set_exit_condition(chassis.swing_exit, 100, 3,  500, 7,   500, 500);\r\n  chassis.set_exit_condition(chassis.drive_exit, 80,  50, 300, 150, 500, 500);\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_exit_condition(exit_condition_ &type, int p_small_exit_time, double p_small_error, int p_big_exit_time, double p_big_error, int p_velocity_exit_time, int p_mA_timeout);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_swing_min",children:"set_swing_min()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the max power of the drive when the robot is within ",(0,n.jsx)(s.code,{children:"start_i"}),".  This only enalbes when ",(0,n.jsx)(s.code,{children:"i"})," is enabled, and when the movement is greater then ",(0,n.jsx)(s.code,{children:"start_i"}),"."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples11",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.set_swing_min(30);\r\n\r\n  chassis.set_swing_pid(45, 110);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_swing_min(int min);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_turn_min",children:"set_turn_min()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the max power of the drive when the robot is within ",(0,n.jsx)(s.code,{children:"start_i"}),".  This only enalbes when ",(0,n.jsx)(s.code,{children:"i"})," is enabled, and when the movement is greater then ",(0,n.jsx)(s.code,{children:"start_i"}),"."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples12",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.set_turn_min(30);\r\n\r\n  chassis.set_turn_pid(45, 110);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_turn_min(int min);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"set_mode",children:"set_mode()"}),"\n",(0,n.jsxs)(s.p,{children:["Sets the current mode of the drive.  Accepts ",(0,n.jsx)(s.code,{children:"ez::DISABLE"}),", ",(0,n.jsx)(s.code,{children:"ez::SWING"}),", ",(0,n.jsx)(s.code,{children:"ez::TURN"}),", ",(0,n.jsx)(s.code,{children:"ez::DRIVE"}),"."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples13",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.set_drive_pid(12, DRIVE_SPEED);\r\n  chassis.wait_drive();\r\n\r\n  chassis.set_mode(ez::DISABLE); // Disable drive\r\n\r\n  chassis.set_tank(-127, -127); // Run drive motors myself\r\n  pros::delay(2000);\r\n  chassis.set_tank(0, 0);\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void set_mode(e_mode p_mode);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"toggle_auto_drive",children:"toggle_auto_drive()"}),"\n",(0,n.jsx)(s.p,{children:"Enables/disables the drive from moving in autonomous.  This is useful for debugging and checking PID variables.  True enables, false disables."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples14",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:'void autonomous() {\r\n  chassis.set_drive_pid(12, DRIVE_SPEED);\r\n  chassis.wait_drive();\r\n\r\n  toggle_auto_drive(false); // Disable drive\r\n\r\n  chassis.set_drive_pid(-12, DRIVE_SPEED);\r\n  while (true) {\r\n    printf(" Left Error: %f  Right Error: %f\\n", chassis.leftPID.error, chassis.rightPID.error);\r\n    pros::delay(ez::util::DELAY_TIME);\r\n  }\r\n}\n'})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void toggle_auto_drive(bool toggle);\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"toggle_auto_print",children:"toggle_auto_print()"}),"\n",(0,n.jsx)(s.p,{children:"Enables/disables the drive functions printing every drive motion.  This is useful when you're debugging something and don't want terminal cluttered.  True enables, false disables."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples15",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.set_drive_pid(12, DRIVE_SPEED); // This will print\r\n  chassis.wait_drive(); // This will print\r\n\r\n  toggle_auto_print(false); // Disable prints\r\n\r\n  chassis.set_drive_pid(-12, DRIVE_SPEED); // This won't print\r\n  chassis.wait_drive(); // This won't print\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void toggle_auto_print(bool toggle);\n"})})})]}),"\n",(0,n.jsx)(s.h2,{id:"getter",children:"Getter"}),"\n",(0,n.jsx)(s.h3,{id:"get_swing_min",children:"get_swing_min()"}),"\n",(0,n.jsx)(s.p,{children:"Returns swing min."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples16",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:'void autonomous() {\r\n  chassis.set_swing_min(30);\r\n\r\n  printf("Swing Min: %i", chassis.get_swing_min());\r\n}\n'})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"int get_swing_min();\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get_turn_min",children:"get_turn_min()"}),"\n",(0,n.jsx)(s.p,{children:"Returns turn min."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples17",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:'void autonomous() {\r\n  chassis.set_turn_min(30);\r\n\r\n  printf("Turn Min: %i", chassis.get_turn_min());\r\n}\n'})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"int get_turn_min();\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"interfered",children:"interfered"}),"\n",(0,n.jsxs)(s.p,{children:["Boolean that returns true when ",(0,n.jsx)(s.code,{children:"wait_drive()"})," or ",(0,n.jsx)(s.code,{children:"wait_until()"})," exit with velocity or is_over_current."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples18",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:' void tug (int attempts) {\r\n   for (int i=0; i<attempts-1; i++) {\r\n     // Attempt to drive backwards\r\n     printf("i - %i", i);\r\n     chassis.set_drive_pid(-12, 127);\r\n     chassis.wait_drive();\r\n\r\n     // If failsafed...\r\n     if (chassis.interfered) {\r\n       chassis.reset_drive_sensor();\r\n       chassis.set_drive_pid(-2, 20);\r\n       pros::delay(1000);\r\n     }\r\n     // If robot successfully drove back, return\r\n     else {\r\n       return;\r\n     }\r\n   }\r\n }\r\n\r\nvoid auto1() {\r\n  chassis.set_drive_pid(24, 110, true);\r\n  chassis.wait_drive();\r\n\r\n  if (chassis.interfered) {\r\n    tug(3);\r\n    return;\r\n  }\r\n\r\n  chassis.set_turn_pid(90, 90);\r\n  chassis.wait_drive();\r\n}\n'})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"bool interfered = false;\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get_mode",children:"get_mode()"}),"\n",(0,n.jsxs)(s.p,{children:["Returns the current drive mode.  Returns ",(0,n.jsx)(s.code,{children:"ez::DISABLE"}),", ",(0,n.jsx)(s.code,{children:"ez::SWING"}),", ",(0,n.jsx)(s.code,{children:"ez::TURN"}),", ",(0,n.jsx)(s.code,{children:"ez::DRIVE"}),"."]}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples19",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.set_drive_pid(12, DRIVE_SPEED);\r\n  chassis.wait_drive();\r\n\r\n  if (chassis.interfered)\r\n    chassis.set_mode(ez::DISABLE);\r\n  \r\n  if (chassis.get_mode() == ez::DISABLE) {\r\n    chassis.set_tank(-127, -127); // Run drive motors myself\r\n    pros::delay(2000);\r\n    chassis.set_tank(0, 0);\r\n  }\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"e_mode get_mode();\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get_tick_per_inch",children:"get_tick_per_inch()"}),"\n",(0,n.jsx)(s.p,{children:"Returns current tick per inch."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples20",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:'void initialize() {\r\n  printf("Tick Per Inch: %f\\n", chassis.get_tick_per_inch());\r\n}\n'})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"double get_tick_per_inch();\n"})})})]}),"\n",(0,n.jsx)(s.h2,{id:"misc",children:"Misc."}),"\n",(0,n.jsx)(s.h3,{id:"wait_drive",children:"wait_drive()"}),"\n",(0,n.jsx)(s.p,{children:"Locks the code in place until the drive has settled.  This uses the exit conditions from the PID class."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples21",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_turn_pid(90, 110);\r\n  chassis.wait_drive();\r\n\r\n  chassis.set_turn_pid(0, 110);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void wait_drive();\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"wait_until",children:"wait_until()"}),"\n",(0,n.jsx)(s.p,{children:"Locks the code in place until the drive has passed the input parameter.  This uses the exit conditions from the PID class."}),"\n",(0,n.jsxs)(i.Z,{groupId:"examples22",defaultValue:"proto",values:[{label:"Prototype",value:"proto"},{label:"Example",value:"example"}],children:[(0,n.jsx)(a.Z,{value:"example",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void autonomous() {\r\n  chassis.reset_gyro(); \r\n  chassis.reset_drive_sensor(); \r\n  chassis.set_drive_brake(MOTOR_BRAKE_HOLD); \r\n\r\n  chassis.set_drive_pid(48, 110);\r\n  chassis.wait_until(24);\r\n  chassis.set_max_speed(40);\r\n  chassis.wait_drive();\r\n}\n"})})}),(0,n.jsx)(a.Z,{value:"proto",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cpp",children:"void wait_until(double target);\n"})})})]})]})}function p(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},5162:(e,s,r)=>{r.d(s,{Z:()=>a});r(7294);var n=r(6010);const t={tabItem:"tabItem_Ymn6"};var i=r(5893);function a(e){let{children:s,hidden:r,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.Z)(t.tabItem,a),hidden:r,children:s})}},4866:(e,s,r)=>{r.d(s,{Z:()=>w});var n=r(7294),t=r(6010),i=r(2466),a=r(6550),l=r(469),o=r(1980),d=r(7392),c=r(12);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:s,children:r}=e;return(0,n.useMemo)((()=>{const e=s??function(e){return u(e).map((e=>{let{props:{value:s,label:r,attributes:n,default:t}}=e;return{value:s,label:r,attributes:n,default:t}}))}(r);return function(e){const s=(0,d.l)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,r])}function p(e){let{value:s,tabValues:r}=e;return r.some((e=>e.value===s))}function _(e){let{queryString:s=!1,groupId:r}=e;const t=(0,a.k6)(),i=function(e){let{queryString:s=!1,groupId:r}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:s,groupId:r});return[(0,o._X)(i),(0,n.useCallback)((e=>{if(!i)return;const s=new URLSearchParams(t.location.search);s.set(i,e),t.replace({...t.location,search:s.toString()})}),[i,t])]}function x(e){const{defaultValue:s,queryString:r=!1,groupId:t}=e,i=h(e),[a,o]=(0,n.useState)((()=>function(e){let{defaultValue:s,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:s,tabValues:i}))),[d,u]=_({queryString:r,groupId:t}),[x,v]=function(e){let{groupId:s}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(s),[t,i]=(0,c.Nk)(r);return[t,(0,n.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:t}),m=(()=>{const e=d??x;return p({value:e,tabValues:i})?e:null})();(0,l.Z)((()=>{m&&o(m)}),[m]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),v(e)}),[u,v,i]),tabValues:i}}var v=r(2389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(5893);function j(e){let{className:s,block:r,selectedValue:n,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),c=e=>{const s=e.currentTarget,r=o.indexOf(s),t=l[r].value;t!==n&&(d(s),a(t))},u=e=>{let s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;s=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;s=o[r]??o[o.length-1];break}}s?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":r},s),children:l.map((e=>{let{value:s,label:r,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===s?0:-1,"aria-selected":n===s,ref:e=>o.push(e),onKeyDown:u,onClick:c,...i,className:(0,t.Z)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":n===s}),children:r??s},s)}))})}function b(e){let{lazy:s,children:r,selectedValue:t}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(s){const e=i.find((e=>e.props.value===t));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,s)=>(0,n.cloneElement)(e,{key:s,hidden:e.props.value!==t})))})}function f(e){const s=x(e);return(0,g.jsxs)("div",{className:(0,t.Z)("tabs-container",m.tabList),children:[(0,g.jsx)(j,{...e,...s}),(0,g.jsx)(b,{...e,...s})]})}function w(e){const s=(0,v.Z)();return(0,g.jsx)(f,{...e,children:u(e.children)},String(s))}},1151:(e,s,r)=>{r.d(s,{Z:()=>l,a:()=>a});var n=r(7294);const t={},i=n.createContext(t);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);