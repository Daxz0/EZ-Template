"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[761],{2270:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=n(5893),o=n(1151);const i={title:"PTO Tutorial",description:"Add or remove drive motors dynamically"},a="PTO Tutorial",s={id:"tutorials/pto_tutorial",title:"PTO Tutorial",description:"Add or remove drive motors dynamically",source:"@site/ez-template-docs/tutorials/pto_tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/pto_tutorial",permalink:"/EZ-Template/tutorials/pto_tutorial",draft:!1,unlisted:!1,editUrl:"https://github.com/EZ-Robotics/EZ-Template/tree/main/website/ez-template-docs/tutorials/pto_tutorial.md",tags:[],version:"current",frontMatter:{title:"PTO Tutorial",description:"Add or remove drive motors dynamically"},sidebar:"tutorialSidebar",previous:{title:"PID Tutorial",permalink:"/EZ-Template/tutorials/pid"},next:{title:"Tuning Constants",permalink:"/EZ-Template/tutorials/tuning_constants"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Example",id:"example",level:2}];function u(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"pto-tutorial",children:(0,r.jsx)(e.strong,{children:"PTO Tutorial"})}),"\n",(0,r.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(e.p,{children:"PTO (power take off) is used to share power between two mechanisms, usually between the drive and something else.  For example, a 6 motor drive could pneumatically shift to a 4 motor drive and a 2 motor intake."}),"\n",(0,r.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"pros::Motor& intake_l = chassis.left_motors[1];\r\npros::Motor& intake_r = chassis.right_motors[1];\r\npros::ADIDigitalOut pto_intake_piston('A');\r\nbool pto_intake_enabled = false;\r\n\r\nvoid pto_intake(bool toggle) {\r\n  pto_intake_enabled = toggle;\r\n  chassis.pto_toggle({intake_l, intake_r}, toggle);\r\n  pto_intake_piston.set_value(toggle);\r\n  if (toggle) {\r\n    intake_l.set_brake_mode(pros::E_MOTOR_BRAKE_COAST);\r\n    intake_r.set_brake_mode(pros::E_MOTOR_BRAKE_COAST);\r\n  }\r\n}\r\n\r\nvoid set_intake(int input) {\r\n  if (!pto_intake_enabled) return;\r\n  intake_l = input;\r\n  intake_r = input;\r\n}\r\n\r\nint button_lock = 0;\r\nvoid intake_control() {\r\n  if (master.get_digital(DIGITAL_DOWN) && button_lock == 0) {\r\n    pto_intake(!pto_intake_enabled);\r\n    button_lock = 1;\r\n  } else if (!master.get_digital(DIGITAL_DOWN)) {\r\n    button_lock = 0;\r\n  }\r\n\r\n  if (master.get_digital(DIGITAL_L1))\r\n    set_intake(127);\r\n  else if (master.get_digital(DIGITAL_L2))\r\n    set_intake(-127);\r\n  else\r\n    set_intake(0);\r\n}\r\n\r\nvoid opcontrol() {\r\n  // This is preference to what you like to drive on.\r\n  chassis.set_drive_brake(MOTOR_BRAKE_COAST);\r\n\r\n  while (true) {\r\n\r\n    chassis.tank(); // Tank control\r\n\r\n    intake_control();\r\n\r\n    pros::delay(ez::util::DELAY_TIME); // This is used for timer calculations!  Keep this ez::util::DELAY_TIME\r\n  }\r\n}\r\n\n"})})]})}function c(t={}){const{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(u,{...t})}):u(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>s,a:()=>a});var r=n(7294);const o={},i=r.createContext(o);function a(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);